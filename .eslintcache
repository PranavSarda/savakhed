[{"/home/pranav/Github Others/savakhed/src/index.js":"1","/home/pranav/Github Others/savakhed/src/App.js":"2","/home/pranav/Github Others/savakhed/src/reportWebVitals.js":"3","/home/pranav/Github Others/savakhed/src/firebase.js":"4","/home/pranav/Github Others/savakhed/src/container/Listing.jsx":"5","/home/pranav/Github Others/savakhed/src/components/LekhakList/LekhakList.jsx":"6","/home/pranav/Github Others/savakhed/src/container/details/Details.jsx":"7","/home/pranav/Github Others/savakhed/src/container/mulakshare.jsx":"8","/home/pranav/Github Others/savakhed/src/components/input-section/InputSection.jsx":"9","/home/pranav/Github Others/savakhed/src/components/list-section/ListSection.jsx":"10","/home/pranav/Github Others/savakhed/src/components/card/Card.js":"11","/home/pranav/Github Others/savakhed/src/components/LekhakList/Akshar.jsx":"12","/home/pranav/Github Others/savakhed/src/components/LekhakList/Alphabets.jsx":"13","/home/pranav/Github Others/savakhed/src/components/switch/Switch.jsx":"14"},{"size":499,"mtime":1609741973284,"results":"15","hashOfConfig":"16"},{"size":1393,"mtime":1610696208002,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609510240937,"results":"18","hashOfConfig":"16"},{"size":534,"mtime":1609926207873,"results":"19","hashOfConfig":"16"},{"size":2937,"mtime":1610696208002,"results":"20","hashOfConfig":"16"},{"size":5159,"mtime":1610971822055,"results":"21","hashOfConfig":"16"},{"size":7061,"mtime":1610972678567,"results":"22","hashOfConfig":"16"},{"size":468,"mtime":1610374431314,"results":"23","hashOfConfig":"16"},{"size":1035,"mtime":1609742657291,"results":"24","hashOfConfig":"16"},{"size":931,"mtime":1610696208002,"results":"25","hashOfConfig":"16"},{"size":387,"mtime":1610972736353,"results":"26","hashOfConfig":"16"},{"size":1065,"mtime":1610971822055,"results":"27","hashOfConfig":"16"},{"size":1356,"mtime":1610971822055,"results":"28","hashOfConfig":"16"},{"size":394,"mtime":1609742657295,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"oj2auc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/pranav/Github Others/savakhed/src/index.js",[],["61","62"],"/home/pranav/Github Others/savakhed/src/App.js",["63"],"import React, { Component } from \"react\";\nimport Listing from \"./container/Listing\";\nimport Details from \"./container/details/Details\";\nimport LekhakList from \"./components/LekhakList/LekhakList\"\n\nimport { db } from \"./firebase\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tshow: \"listing\",\n\t\t\tcurrentDetails: {\n\t\t\t},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst self = this;\n\t\twindow.addEventListener(\n\t\t\t\"hashchange\",\n\t\t\tfunction () {\n\t\t\t\tconsole.log(\"The hash has changed!\");\n\t\t\t\tself.setPath();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tthis.setPath();\n\t}\n\n\tsetPath = () => {\n\t\tconst currURL = window.location.href.split(\"#\");\n\t\tif (currURL.length > 1) {\n\t\t\tif (currURL[1].includes(\"details\")) {\n\t\t\t\tthis.setState({ show: \"details\" });\n\t\t\t} else if (currURL[1].includes(\"lekhakList\")) {\n\t\t\t\tthis.setState({ show: \"lekhakList\" });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({ show: \"listing\" });\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{this.state.show === \"details\" &&\n\t\t\t\t\t<Details bookDetail = {this.state.currentDetails} />\n\t\t\t\t}\n\t\t\t\t{this.state.show === \"lekhakList\" &&\n\t\t\t\t\t<LekhakList />\t\t\t//Change this route----------------------------------------\n\t\t\t\t}\n\t\t\t\t{this.state.show === \"listing\" && (\n\t\t\t\t\t<Listing\n\t\t\t\t\t\tsetCurrentDetails={(book) =>\n\t\t\t\t\t\t\tthis.setState({ currentDetails: book })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","/home/pranav/Github Others/savakhed/src/reportWebVitals.js",[],"/home/pranav/Github Others/savakhed/src/firebase.js",[],"/home/pranav/Github Others/savakhed/src/container/Listing.jsx",[],"/home/pranav/Github Others/savakhed/src/components/LekhakList/LekhakList.jsx",["64","65","66","67","68"],"import React, { Component } from 'react'\nimport './LekhakList.css'\nimport Card from '../card/Card'\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\nimport classnames from 'classnames';\nimport Alphabets from './Alphabets';\nimport Akshar from './Akshar';\n\nconst BookDetails = [\n\t{\n\t\tid: \"1\",\n\t\t\"vibhag id\": \"11\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n\t{\n\t\tid: \"2\",\n\t\t\"vibhag id\": \"22\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"3\",\n\t\t\"vibhag id\": \"33\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"4\",\n\t\t\"vibhag id\": \"44\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n\t{\n\t\tid: \"5\",\n\t\t\"vibhag id\": \"55\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"6\",\n\t\t\"vibhag id\": \"66\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"7\",\n\t\t\"vibhag id\": \"77\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n\t{\n\t\tid: \"8\",\n\t\t\"vibhag id\": \"88\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"9\",\n\t\t\"vibhag id\": \"99\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"1\",\n\t\t\"vibhag id\": \"11\",\n\t\t\"bookName\": \"Wings of Fire\",\n\t\t\"author\": \"APJ\",\n\t},\n\t{\n\t\tid: \"2\",\n\t\t\"vibhag id\": \"22\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"3\",\n\t\t\"vibhag id\": \"33\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"4\",\n\t\t\"vibhag id\": \"44\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n];\n\n\n\n\n\n\nclass LekhakList extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n          character : 'a',\n          newItem : BookDetails,\n          authorList : BookDetails,\n          tableHeaders: [\"id\", \"vibhag id\", \"bookName\", \"author\"],\n          matching_authors : [],\n          activeTab : '1'\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  }\n\n\n    handleChange(e) {\n        let temp = e.target.value;\n        this.setState({\n            character : e.target.value\n        })\n        const tempAuthor = this.state.newItem.filter((item) => {\n            if(item.author.toLowerCase().includes(temp.toLowerCase())){\n                return item\n            }\n            else{\n                return null\n            }\n        })\n        this.setState({\n            authorList: tempAuthor,\n          })\n    }\n\n    \n\n    renderAuthors = () => {\n        return(\n        this.state.authorList.map ((data) =>(         \n          <div className=\"renderAuthors\">\n            <Card bookName={data.author} /> \n         </div>)))\n      }\n\n      renderAlphabets = () => {\n          return(\n              Alphabets.map((letter) =>(\n                <button value={letter.value}>{letter.key}</button>\n              )\n              )\n          )\n      }\n      renderAkshars = () => {\n        return(\n            Akshar.map((letter) =>(\n              <button value={letter.key}>{letter.key}</button>\n            )\n            )\n        )\n    }\n\n    render(){    \n        const {character} = this.state;\n        return (\n            <div>\n                <div>\n                    <div className=\"toggleBtn\">\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '1' })}\n                            onClick={() => { this.toggle('1'); }}>\n                            <button className=\"marBtn\">Marathi</button>\n                        </NavLink>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '2' })}\n                            onClick={() => { this.toggle('2'); }}>\n                            <button className=\"engBtn\">English</button>\n                        </NavLink>\n                    </div>\n                    <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                            {this.state.activeTab == 1 ? \n                            <div className=\"ButtonContainer\">\n                            {this.renderAkshars()}\n                            </div> \n                            : null}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            {this.state.activeTab == 2 ? \n                            <div className=\"ButtonContainer\">\n                                {this.renderAlphabets()}\n                        </div>\n                            : null}\n                        </TabPane>\n                    </TabContent>\n                </div>\n\n                \n                {/* {this.state.character==1 &&\n                    <div>\n                        this is b\n                    </div>\n                    } */}\n                <div >\n                    {this.renderAuthors()}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default LekhakList;","/home/pranav/Github Others/savakhed/src/container/details/Details.jsx",["69","70"],"/home/pranav/Github Others/savakhed/src/container/mulakshare.jsx",[],"/home/pranav/Github Others/savakhed/src/components/input-section/InputSection.jsx",[],"/home/pranav/Github Others/savakhed/src/components/list-section/ListSection.jsx",[],"/home/pranav/Github Others/savakhed/src/components/card/Card.js",[],"/home/pranav/Github Others/savakhed/src/components/LekhakList/Akshar.jsx",[],"/home/pranav/Github Others/savakhed/src/components/LekhakList/Alphabets.jsx",[],"/home/pranav/Github Others/savakhed/src/components/switch/Switch.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":4,"column":31,"nodeType":"77","messageId":"78","endLine":4,"endColumn":34},{"ruleId":"75","severity":1,"message":"80","line":4,"column":36,"nodeType":"77","messageId":"78","endLine":4,"endColumn":43},{"ruleId":"75","severity":1,"message":"81","line":164,"column":16,"nodeType":"77","messageId":"78","endLine":164,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":182,"column":51,"nodeType":"84","messageId":"85","endLine":182,"endColumn":53},{"ruleId":"82","severity":1,"message":"83","line":189,"column":51,"nodeType":"84","messageId":"85","endLine":189,"endColumn":53},{"ruleId":"82","severity":1,"message":"86","line":169,"column":54,"nodeType":"84","messageId":"85","endLine":169,"endColumn":56},{"ruleId":"82","severity":1,"message":"86","line":172,"column":54,"nodeType":"84","messageId":"85","endLine":172,"endColumn":56},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'NavItem' is defined but never used.","'character' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]