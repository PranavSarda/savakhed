[{"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\index.js":"1","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\reportWebVitals.js":"2","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\App.js":"3","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\input-section\\InputSection.jsx":"4","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\firebase.js":"5","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\card\\Card.js":"6","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\ListSection.jsx":"7","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\switch\\Switch.jsx":"8","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\details\\Details.jsx":"9","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\header\\Header.jsx":"10","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\listing\\Listing.jsx":"11","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\about-us\\AboutUs.jsx":"12","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\navbar\\mobileNav.jsx":"13","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\LekhakList.jsx":"14","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Akshar.jsx":"15","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Alphabets.jsx":"16","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\recommendation\\Recommendation.jsx":"17"},{"size":516,"mtime":1609581791621,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1608786353980,"results":"20","hashOfConfig":"19"},{"size":2228,"mtime":1611678420679,"results":"21","hashOfConfig":"19"},{"size":1664,"mtime":1611468836264,"results":"22","hashOfConfig":"19"},{"size":553,"mtime":1610613490802,"results":"23","hashOfConfig":"19"},{"size":454,"mtime":1611584710294,"results":"24","hashOfConfig":"19"},{"size":986,"mtime":1611662064445,"results":"25","hashOfConfig":"19"},{"size":414,"mtime":1610723489697,"results":"26","hashOfConfig":"19"},{"size":5270,"mtime":1611644085925,"results":"27","hashOfConfig":"19"},{"size":2806,"mtime":1611678420679,"results":"28","hashOfConfig":"19"},{"size":3081,"mtime":1611497332072,"results":"29","hashOfConfig":"19"},{"size":826,"mtime":1611468714187,"results":"30","hashOfConfig":"19"},{"size":1715,"mtime":1611584710295,"results":"31","hashOfConfig":"19"},{"size":5723,"mtime":1611584710297,"results":"32","hashOfConfig":"19"},{"size":1167,"mtime":1611584710296,"results":"33","hashOfConfig":"19"},{"size":1061,"mtime":1611584710296,"results":"34","hashOfConfig":"19"},{"size":1302,"mtime":1611663506910,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"a0mhho",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\index.js",[],["75","76"],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\reportWebVitals.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\App.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\input-section\\InputSection.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\firebase.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\card\\Card.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\ListSection.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\switch\\Switch.jsx",[],["77","78"],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\details\\Details.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\header\\Header.jsx",["79"],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\listing\\Listing.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\about-us\\AboutUs.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\navbar\\mobileNav.jsx",["80","81"],"import React, { Component } from 'react'\r\nimport './mobileNav.css';\r\nimport searchSvg from \"../../svg/search.svg\"\r\nimport authorSvg from \"../../svg/author.svg\"\r\nimport authorSvg2 from \"../../svg/author2.svg\"\r\nimport aboutSvg from \"../../svg/about.svg\"\r\nexport default class mobileNav extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isClicked : 1\r\n        }\r\n        this.setButton = this.setButton.bind(this);\r\n    }\r\n\r\n    setButton(id){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mobileNav\">\r\n                {/* search */}\r\n                <div className={this.state.isClicked === 1 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\r\n                    <a href=\"#/search\" onClick={() => this.setState({ isClicked: 1 })}>\r\n                        <img src={searchSvg} className=\"searchSvg\" alt=\"Search Books\" />\r\n                    </a>\r\n                </div>\r\n                {/* lekhak list */}\r\n                <div className={this.state.isClicked === 2 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\r\n                    <a href=\"#/lekhaklist\" onClick={() => this.setState({ isClicked: 2})}>\r\n                        <img src={authorSvg2} className=\"lekhakSvg\" alt=\"Lekhak List\" />\r\n                    </a>\r\n                </div>\r\n                {/* about */}\r\n                <div className={this.state.isClicked === 3 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\r\n                    <a href=\"#\" onClick={() => this.setState({ isClicked: 3})}>\r\n                        <img src={aboutSvg} className=\"lekhakSvg\" alt=\"About US\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\LekhakList.jsx",["82","83","84","85"],"import React, { Component } from 'react'\r\nimport './LekhakList.css'\r\nimport ListSection from \"../../components/list-section/ListSection\";\r\nimport Alphabets from './Alphabets';\r\nimport Akshar from './Akshar';\r\nimport { db } from '../../firebase'\r\n\r\n\r\n\r\nclass LekhakList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorList: [],\r\n            matching_authors: [],\r\n            activeTab: '1',\r\n            lekhakArray: [],\r\n            lekhakDict: {},\r\n            searched: false,\r\n\t\t\ttableHeaders: [],\r\n            results: [],\r\n            currentLekhak :\"\",\r\n            isBtnClicked : null\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n\r\n    getLekhakNames = value => async () => {\r\n        this.setState({isBtnClicked : value})\r\n        let val = value;\r\n        //console.log(val);\r\n        const doc = await db.collection(\"newMappingTrial\").doc(value).get();\r\n        const lekhakNamesDict = doc.data().names;\r\n        this.setState(\r\n            { lekhakDict: lekhakNamesDict }\r\n        );\r\n        console.log(lekhakNamesDict);\r\n    }\r\n\r\n    getLekhakBooks = value => async () => {\r\n        \r\n        let lekhakName = value;\r\n        this.setState({\r\n            lekhakDict: {},\r\n            searched: false,\r\n\t\t\ttableHeaders: [],\r\n            results: [],\r\n            currentLekhak: lekhakName\r\n        });\r\n        await db.collection(\"bookList\")\r\n            .where(\"lekhakNameJoint\", \"==\", lekhakName)\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    let currentBook = doc.data();\r\n                    this.setState({\r\n                        results : this.state.results.concat([{...currentBook, id: doc.id }])\r\n                    });\r\n                    //console.log(currentBook.lekhak, currentBook.pustakName);\r\n                });\r\n            });\r\n        this.setState({\r\n            tableHeaders: [\"Dakhal-ID\", \"Vibhag-ID\", \"Book\", \"Author\"],\r\n            searched : true\r\n        });\r\n        //const bookNamesArray = doc.data().lekhakNameJoint;\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({ activeTab: tab });\r\n        }\r\n    }\r\n\r\n    renderAuthors = () => {\r\n        return (\r\n            Object.keys(this.state.lekhakDict).map((key, index) => (\r\n                <div className=\"renderAuthors\">\r\n                    <div className=\"authorName\">{key}</div>\r\n                    <div className=\"bookNames\"><p onClick={this.getLekhakBooks(key)}>View <span>{this.state.lekhakDict[key]}</span> Books</p></div>\r\n                </div>)));\r\n    }\r\n\r\n    renderAlphabets = (alpha) => {\r\n        return (\r\n            alpha.map((letter) => (\r\n                <button value={letter.key} className={this.state.isBtnClicked === letter.key? \"alphabetsClicked\" : \"alphabetsUnclicked\"} onClick={this.getLekhakNames(letter.key)}>{letter.key}</button>\r\n            ))\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { character } = this.state;\r\n        return (\r\n            <div className=\"lekhakList\">\r\n                {!this.state.searched &&\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"toggleBtn\">\r\n                                <button \r\n                                className={this.state.activeTab === \"1\" ? \"clickedBtn\" : \"unclickedBtn\"} \r\n                                onClick={() => { this.toggle('1'); }}\r\n                                >\r\n                                    Marathi\r\n                                </button>\r\n                                <button \r\n                                className={this.state.activeTab === \"2\" ? \"clickedBtn\" : \"unclickedBtn\"} \r\n                                onClick={() => { this.toggle('2'); }}\r\n                                >\r\n                                    English\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    {this.state.activeTab == 1 ?\r\n                                        <div className=\"ButtonContainer\">\r\n                                            {this.renderAlphabets(Akshar)}\r\n                                        </div>\r\n                                        : null}\r\n                                </div>\r\n                                <div>\r\n                                    {this.state.activeTab == 2 ?\r\n                                        <div className=\"ButtonContainer\">\r\n                                            {this.renderAlphabets(Alphabets)}\r\n                                        </div>\r\n                                        : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"authorsList\">\r\n                            {this.renderAuthors()}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.state.searched && \r\n                    <div className=\"lekhakBooklist\">\r\n                        <h1>लेखक : { this.state.currentLekhak }</h1>\r\n                        <ListSection\r\n                            setCurrentDetails={this.props.setCurrentDetails}\r\n                            tableHeaders={this.state.tableHeaders}\r\n                            tableElements={this.state.results}\r\n                            searched={this.state.searched}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LekhakList;","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Akshar.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Alphabets.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\recommendation\\Recommendation.jsx",["86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport ListSection from \"../list-section/ListSection\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction Recommendation() {\r\n\tconst tableHeaders = [\"Dakhal-ID\", \"Vibhag-ID\", \"Book\", \"Author\"];\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [searched, setSearched] = useState(false);\r\n\r\n\tconst getResults = () => {\r\n\t\tlet day = new Date().getUTCDate();\r\n\r\n\t\tdb.collection(\"bookList\")\r\n\t\t\t.orderBy(\"dakhalId\", \"asc\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tvar slotSize = snapshot.size / 365;\r\n\t\t\t\tvar firstSlot = Math.floor((day - 1) * slotSize);\r\n\t\t\t\tvar secondSlot = Math.ceil(day * slotSize);\r\n\r\n\t\t\t\tfor (var i = firstSlot; i <= secondSlot; i++) {\r\n\t\t\t\t\tlet book = snapshot.docs[i].data();\r\n\t\t\t\t\tresults.push(book);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(results);\r\n\t\t\t\tsetSearched(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetResults();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{/* <div className=\"logo\">\r\n\t\t\t\tसार्वजनिक वाचनालय <br /> राजगुरूनगर\r\n\t\t\t</div> */}\r\n\t\t\t<ListSection\r\n\t\t\t\ttableHeaders={tableHeaders}\r\n\t\t\t\ttableElements={results}\r\n\t\t\t\tsearched={searched}\r\n\t\t\t\tsetCurrentDetails={(book) => console.log(book)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Recommendation;\r\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":57,"column":5,"nodeType":"96","endLine":57,"endColumn":68},{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":17},{"ruleId":"94","severity":1,"message":"101","line":37,"column":21,"nodeType":"96","endLine":37,"endColumn":80},{"ruleId":"97","severity":1,"message":"102","line":33,"column":13,"nodeType":"99","messageId":"100","endLine":33,"endColumn":16},{"ruleId":"97","severity":1,"message":"103","line":96,"column":17,"nodeType":"99","messageId":"100","endLine":96,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":118,"column":59,"nodeType":"106","messageId":"107","endLine":118,"endColumn":61},{"ruleId":"104","severity":1,"message":"105","line":125,"column":59,"nodeType":"106","messageId":"107","endLine":125,"endColumn":61},{"ruleId":"97","severity":1,"message":"108","line":7,"column":18,"nodeType":"99","messageId":"100","endLine":7,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":33,"column":5,"nodeType":"111","endLine":33,"endColumn":7,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'authorSvg' is defined but never used.","Identifier","unusedVar","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'val' is assigned a value but never used.","'character' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setResults' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [getResults]",{"range":"118","text":"119"},[897,899],"[getResults]"]