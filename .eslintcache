[{"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\index.js":"1","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\reportWebVitals.js":"2","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\App.js":"3","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\header\\Header.jsx":"4","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\listing\\Listing.jsx":"5","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\about-us\\AboutUs.jsx":"6","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\details\\Details.jsx":"7","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\navbar\\mobileNav.jsx":"8","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\LekhakList.jsx":"9","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\recommendation\\Recommendation.jsx":"10","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\firebase.js":"11","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\card\\Card.js":"12","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Akshar.jsx":"13","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Alphabets.jsx":"14","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\ListSection.jsx":"15","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\input-section\\InputSection.jsx":"16","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\loading\\Loading.jsx":"17","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\explore.js":"18","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\genre-card.jsx":"19","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-card\\ListCard.jsx":"20","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\switch\\Switch.jsx":"21","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\listing\\mulakshare.jsx":"22"},{"size":516,"mtime":1609581791621,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1608786353980,"results":"25","hashOfConfig":"24"},{"size":2383,"mtime":1612009086300,"results":"26","hashOfConfig":"24"},{"size":2806,"mtime":1611678420679,"results":"27","hashOfConfig":"24"},{"size":6194,"mtime":1612276694286,"results":"28","hashOfConfig":"24"},{"size":826,"mtime":1611468714187,"results":"29","hashOfConfig":"24"},{"size":5270,"mtime":1611644085925,"results":"30","hashOfConfig":"24"},{"size":1715,"mtime":1611584710295,"results":"31","hashOfConfig":"24"},{"size":6072,"mtime":1611924870110,"results":"32","hashOfConfig":"24"},{"size":1164,"mtime":1611832710361,"results":"33","hashOfConfig":"24"},{"size":553,"mtime":1610613490802,"results":"34","hashOfConfig":"24"},{"size":454,"mtime":1611584710294,"results":"35","hashOfConfig":"24"},{"size":1167,"mtime":1611584710296,"results":"36","hashOfConfig":"24"},{"size":1061,"mtime":1611584710296,"results":"37","hashOfConfig":"24"},{"size":1298,"mtime":1612275851757,"results":"38","hashOfConfig":"24"},{"size":1340,"mtime":1612276517167,"results":"39","hashOfConfig":"24"},{"size":1775,"mtime":1612263197876,"results":"40","hashOfConfig":"24"},{"size":3830,"mtime":1612006581650,"results":"41","hashOfConfig":"24"},{"size":474,"mtime":1612275816608,"results":"42","hashOfConfig":"24"},{"size":1116,"mtime":1611924870107,"results":"43","hashOfConfig":"24"},{"size":414,"mtime":1610723489697,"results":"44","hashOfConfig":"24"},{"size":521,"mtime":1611468714189,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"a0mhho",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\index.js",[],["96","97"],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\reportWebVitals.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\App.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\header\\Header.jsx",["98"],"import React, { useEffect } from \"react\";\r\nimport \"./header.css\";\r\nimport { ReactComponent as Arrow } from \"./left-arrow.svg\";\r\n\r\nfunction Header() {\r\n\tconst setLabel = () => {\r\n\t\tconst href = window.location.href;\r\n\t\tif (href.includes(\"lekhaklist\")) return \"lekhak-list\";\r\n\t\tif (href.includes(\"aboutus\")) return \"about-us\";\r\n\t\tif (href.includes(\"details\")) return \"details\";\r\n\t\tif (href.includes(\"search\")) return \"search\";\r\n\t\tif (href.includes(\"recommendation\")) return \"recommendation\";\r\n\t\treturn \"search\";\r\n\t};\r\n\r\n\tconst removeActive = () => {\r\n\t\tconst nav = document.getElementsByClassName(\"tabs\")[0];\r\n\t\tconst children = nav.children;\r\n\t\tif (children) {\r\n\t\t\t[...children].forEach((element) => {\r\n\t\t\t\telement\r\n\t\t\t\t\t? element.children[0].classList.remove(\"active\")\r\n\t\t\t\t\t: console.log();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst hashChange = () => {\r\n\t\twindow.addEventListener(\r\n\t\t\t\"hashchange\",\r\n\t\t\tfunction () {\r\n\t\t\t\t// console.log(\"The hash has changed!\");\r\n\t\t\t\tif (document.getElementById(setLabel()) != null) {\r\n\t\t\t\t\tremoveActive();\r\n\t\t\t\t\tdocument.getElementById(setLabel()).classList.add(\"active\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\t};\r\n\r\n\tconst onClickHandler = (target) => {\r\n\t\tremoveActive();\r\n\t\tdocument.getElementById(target).classList.add(\"active\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (document.getElementById(setLabel()) != null) {\r\n\t\t\tdocument.getElementById(setLabel()).classList.add(\"active\");\r\n\t\t}\r\n\t\thashChange();\r\n\t});\r\n\r\n\treturn (\r\n\t\t<nav className=\"nav-bar\">\r\n\t\t\t{window.location.href.includes(\"details\") ? (\r\n\t\t\t\t<a onClick={() => window.history.go(-1)} className=\"back-link\">\r\n\t\t\t\t\t<div className=\"back-button\">\r\n\t\t\t\t\t\t<Arrow />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t) : null}\r\n\t\t\t<div className=\"tabs\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"/savakhed/#/search\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tonClickHandler(\"search\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"link-placeholders\" id=\"search\">\r\n\t\t\t\t\t\tSearch\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"/savakhed/#/lekhaklist\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tonClickHandler(\"lekhak-list\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"link-placeholders\" id=\"lekhak-list\">\r\n\t\t\t\t\t\tLekhak List\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"/savakhed/#/recommendation\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tonClickHandler(\"recommendation\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"link-placeholders\" id=\"recommendation\">\r\n\t\t\t\t\t\tRecommendations\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"/savakhed/#/aboutus\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tonClickHandler(\"about-us\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"link-placeholders\" id=\"about-us\">\r\n\t\t\t\t\t\tAbout Us\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"/#/search\" onClick={() => {onClickHandler(\"about-us\")}} id=\"title-id\">\r\n\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t{setLabel().replace('-', ' ')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\listing\\Listing.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\about-us\\AboutUs.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\details\\Details.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\navbar\\mobileNav.jsx",["99","100"],"import React, { Component } from 'react'\r\nimport './mobileNav.css';\r\nimport searchSvg from \"../../svg/search.svg\"\r\nimport authorSvg from \"../../svg/author.svg\"\r\nimport authorSvg2 from \"../../svg/author2.svg\"\r\nimport aboutSvg from \"../../svg/about.svg\"\r\nexport default class mobileNav extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isClicked : 1\r\n        }\r\n        this.setButton = this.setButton.bind(this);\r\n    }\r\n\r\n    setButton(id){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mobileNav\">\r\n                {/* search */}\r\n                <div className={this.state.isClicked === 1 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\r\n                    <a href=\"#/search\" onClick={() => this.setState({ isClicked: 1 })}>\r\n                        <img src={searchSvg} className=\"searchSvg\" alt=\"Search Books\" />\r\n                    </a>\r\n                </div>\r\n                {/* lekhak list */}\r\n                <div className={this.state.isClicked === 2 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\r\n                    <a href=\"#/lekhaklist\" onClick={() => this.setState({ isClicked: 2})}>\r\n                        <img src={authorSvg2} className=\"lekhakSvg\" alt=\"Lekhak List\" />\r\n                    </a>\r\n                </div>\r\n                {/* about */}\r\n                <div className={this.state.isClicked === 3 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\r\n                    <a href=\"#\" onClick={() => this.setState({ isClicked: 3})}>\r\n                        <img src={aboutSvg} className=\"lekhakSvg\" alt=\"About US\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\LekhakList.jsx",["101","102","103","104"],"import React, { Component } from 'react'\r\nimport './LekhakList.css'\r\nimport ListSection from \"../../components/list-section/ListSection\";\r\nimport Alphabets from './Alphabets';\r\nimport Akshar from './Akshar';\r\nimport { db } from '../../firebase'\r\nimport Loading from '../../components/loading/Loading';\r\n\r\n\r\n\r\nclass LekhakList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            authorList: [],\r\n            matching_authors: [],\r\n            activeTab: '1',\r\n            lekhakArray: [],\r\n            lekhakDict: {},\r\n            searched: false,\r\n\t\t\ttableHeaders: [],\r\n            results: [],\r\n            currentLekhak :\"\",\r\n            isBtnClicked : null\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n\r\n    getLekhakNames = value => async () => {\r\n        this.setState({isBtnClicked : value, loading: true, lekhakDict: {}})\r\n        let val = value;\r\n        const doc = await db.collection(\"newMappingTrial\").doc(value).get();\r\n        const lekhakNamesDict = doc.data().names;\r\n        this.setState(\r\n            { lekhakDict: lekhakNamesDict, loading: false }\r\n        );\r\n        console.log(lekhakNamesDict);\r\n        // console.log(this.state.loading);\r\n    }\r\n\r\n    getLekhakBooks = value => async () => {\r\n        \r\n        let lekhakName = value;\r\n        this.setState({\r\n            lekhakDict: {},\r\n            searched: false,\r\n\t\t\ttableHeaders: [],\r\n            results: [],\r\n            currentLekhak: lekhakName\r\n        });\r\n        await db.collection(\"bookList\")\r\n            .where(\"lekhakNameJoint\", \"==\", lekhakName)\r\n            .get()\r\n            .then((snapshot) => {\r\n                snapshot.forEach((doc) => {\r\n                    let currentBook = doc.data();\r\n                    this.setState({\r\n                        results : this.state.results.concat([{...currentBook, id: doc.id }])\r\n                    });\r\n                    //console.log(currentBook.lekhak, currentBook.pustakName);\r\n                });\r\n            });\r\n        this.setState({\r\n            tableHeaders: [\"Dakhal-ID\", \"Vibhag-ID\", \"Book\", \"Author\"],\r\n            searched : true\r\n        });\r\n        //const bookNamesArray = doc.data().lekhakNameJoint;\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({ activeTab: tab });\r\n        }\r\n    }\r\n\r\n    renderAuthors = () => {\r\n        return (\r\n            Object.keys(this.state.lekhakDict).map((key, index) => (\r\n                <div className=\"renderAuthors\">\r\n                    <div className=\"authorName\">{key}</div>\r\n                    <div className=\"bookNames\"><p onClick={this.getLekhakBooks(key)}>View <span>{this.state.lekhakDict[key]}</span> Books</p></div>\r\n                </div>)));\r\n    }\r\n\r\n    renderAlphabets = (alpha) => {\r\n        return (\r\n            alpha.map((letter) => (\r\n                <button value={letter.key} className={this.state.isBtnClicked === letter.key? \"alphabetsClicked\" : \"alphabetsUnclicked\"} onClick={this.getLekhakNames(letter.key)}>{letter.key}</button>\r\n            ))\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { character } = this.state;\r\n        return (\r\n            <div className=\"lekhakList\">\r\n                {!this.state.searched &&\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"toggleBtn\">\r\n                                <button \r\n                                className={this.state.activeTab === \"1\" ? \"clickedBtn\" : \"unclickedBtn\"} \r\n                                onClick={() => { this.toggle('1'); }}\r\n                                >\r\n                                    Marathi\r\n                                </button>\r\n                                <button \r\n                                className={this.state.activeTab === \"2\" ? \"clickedBtn\" : \"unclickedBtn\"} \r\n                                onClick={() => { this.toggle('2'); }}\r\n                                >\r\n                                    English\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    {this.state.activeTab == 1 ?\r\n                                        <div className=\"ButtonContainer\">\r\n                                            {this.renderAlphabets(Akshar)}\r\n                                        </div>\r\n                                        : null}\r\n                                </div>\r\n                                <div>\r\n                                    {this.state.activeTab == 2 ?\r\n                                        <div className=\"ButtonContainer\">\r\n                                            {this.renderAlphabets(Alphabets)}\r\n                                        </div>\r\n                                        : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"authorsList\">\r\n                            {/* Object.keys(this.state.lekhakDict).length == 0 && this.state.isBtnClicked */}\r\n                            {this.state.loading ? <Loading page=\"lekhakList\"/> : null} \r\n                            {this.renderAuthors()}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.state.searched && \r\n                    <div className=\"lekhakBooklist\">\r\n                        <h1>लेखक : { this.state.currentLekhak }</h1>\r\n                        <ListSection\r\n                            setCurrentDetails={this.props.setCurrentDetails}\r\n                            tableHeaders={this.state.tableHeaders}\r\n                            tableElements={this.state.results}\r\n                            searched={this.state.searched}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LekhakList;","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\recommendation\\Recommendation.jsx",["105"],"import React, { useEffect, useState } from \"react\";\r\nimport ListSection from \"../list-section/ListSection\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction Recommendation() {\r\n\tconst tableHeaders = [\"Dakhal-ID\", \"Vibhag-ID\", \"Book\", \"Author\"];\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [searched, setSearched] = useState(false);\r\n\r\n\tconst getResults = () => {\r\n\t\tlet day = new Date().getUTCDate();\r\n\r\n\t\tdb.collection(\"bookList\")\r\n\t\t\t.orderBy(\"dakhalId\", \"asc\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tvar slotSize = snapshot.size / 365;\r\n\t\t\t\tvar firstSlot = Math.floor((day - 1) * slotSize);\r\n\t\t\t\tvar secondSlot = Math.ceil(day * slotSize);\r\n\r\n\t\t\t\tfor (var i = firstSlot; i <= secondSlot; i++) {\r\n\t\t\t\t\tlet book = snapshot.docs[i].data();\r\n\t\t\t\t\tresults.push({ ...book, id: snapshot.docs[i].id });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetSearched(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetResults();\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<ListSection\r\n\t\t\t\ttableHeaders={tableHeaders}\r\n\t\t\t\ttableElements={results}\r\n\t\t\t\tsearched={searched}\r\n\t\t\t\tsetCurrentDetails={(book) => console.log(book)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Recommendation;\r\n","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\firebase.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\card\\Card.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Akshar.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\LekhakList\\Alphabets.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\ListSection.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\input-section\\InputSection.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\loading\\Loading.jsx",["106","107","108","109"],"import React from 'react'\r\nimport '../../container/LekhakList/LekhakList.css'\r\nimport './shimmer.css'\r\n\r\nfunction Loading({page}) {\r\n\r\n\t//40px x 11 = 440px\r\n\tconst ratio = 440/722\r\n\tconst elementsNumber = Math.round(ratio*window.innerHeight/40)\r\n\tlet elements = []\r\n\tconst listingFragment = (\r\n\t\t<div className=\"renderAuthorsShimmer\">\r\n\t\t\t<div className=\"authorName shine\"></div>\r\n\t\t\t<div className=\"bookNames shine\"></div>\r\n\t\t</div>\r\n\t)\r\n\tfor (let i = 0; i < elementsNumber; i++) {\r\n\t\telements.push(listingFragment) \r\n\t}\r\n\tconsole.log(elements.length);\r\n\r\n\tif (page === 'lekhakList') {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{elements}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card-container\">\r\n\t\t\t\t<img className=\"book-cover shine\"/>\r\n\t\t\t\t<a>\r\n\t\t\t\t\t<span className=\"book-title shine\" style={{height: \"15px\", width: \"50%\"}}></span>\r\n\t\t\t\t\t<span className=\"book-author shine\" style={{height: \"15px\", width: \"50%\"}}></span>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<span className=\"book-category shine\" style={{height: \"15px\", width: \"30%\"}}>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"book-language shine\" style={{height: \"15px\", width: \"30%\"}}></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-container\">\r\n\t\t\t\t<img className=\"book-cover shine\"/>\r\n\t\t\t\t<a>\r\n\t\t\t\t\t<span className=\"book-title shine\" style={{height: \"15px\", width: \"50%\"}}></span>\r\n\t\t\t\t\t<span className=\"book-author shine\" style={{height: \"15px\", width: \"50%\"}}></span>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<span className=\"book-category shine\" style={{height: \"15px\", width: \"30%\"}}>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"book-language shine\" style={{height: \"15px\", width: \"30%\"}}></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Loading\r\n","G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\explore.js",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-section\\genre-card.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\list-card\\ListCard.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\components\\switch\\Switch.jsx",[],"G:\\projects\\SaVaKhed Library\\New folder\\savakhed\\src\\container\\listing\\mulakshare.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":57,"column":5,"nodeType":"116","endLine":57,"endColumn":68},{"ruleId":"117","severity":1,"message":"118","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":17},{"ruleId":"114","severity":1,"message":"121","line":37,"column":21,"nodeType":"116","endLine":37,"endColumn":80},{"ruleId":"117","severity":1,"message":"122","line":35,"column":13,"nodeType":"119","messageId":"120","endLine":35,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":98,"column":17,"nodeType":"119","messageId":"120","endLine":98,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":120,"column":59,"nodeType":"126","messageId":"127","endLine":120,"endColumn":61},{"ruleId":"124","severity":1,"message":"125","line":127,"column":59,"nodeType":"126","messageId":"127","endLine":127,"endColumn":61},{"ruleId":"117","severity":1,"message":"128","line":7,"column":18,"nodeType":"119","messageId":"120","endLine":7,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":32,"column":5,"nodeType":"116","endLine":32,"endColumn":40},{"ruleId":"114","severity":1,"message":"115","line":33,"column":5,"nodeType":"116","endLine":33,"endColumn":8},{"ruleId":"129","severity":1,"message":"130","line":45,"column":5,"nodeType":"116","endLine":45,"endColumn":40},{"ruleId":"114","severity":1,"message":"115","line":46,"column":5,"nodeType":"116","endLine":46,"endColumn":8},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'authorSvg' is defined but never used.","Identifier","unusedVar","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'val' is assigned a value but never used.","'character' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setResults' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]