[{"/home/pranav/Github Others/savakhed/src/index.js":"1","/home/pranav/Github Others/savakhed/src/reportWebVitals.js":"2","/home/pranav/Github Others/savakhed/src/App.js":"3","/home/pranav/Github Others/savakhed/src/firebase.js":"4","/home/pranav/Github Others/savakhed/src/container/details/Details.jsx":"5","/home/pranav/Github Others/savakhed/src/container/LekhakList/LekhakList.jsx":"6","/home/pranav/Github Others/savakhed/src/components/navbar/mobileNav.jsx":"7","/home/pranav/Github Others/savakhed/src/components/card/Card.js":"8","/home/pranav/Github Others/savakhed/src/components/input-section/InputSection.jsx":"9","/home/pranav/Github Others/savakhed/src/components/list-section/ListSection.jsx":"10","/home/pranav/Github Others/savakhed/src/container/LekhakList/Alphabets.jsx":"11","/home/pranav/Github Others/savakhed/src/container/LekhakList/Akshar.jsx":"12","/home/pranav/Github Others/savakhed/src/components/switch/Switch.jsx":"13","/home/pranav/Github Others/savakhed/src/container/listing/Listing.jsx":"14","/home/pranav/Github Others/savakhed/src/components/about-us/AboutUs.jsx":"15","/home/pranav/Github Others/savakhed/src/components/header/Header.jsx":"16"},{"size":499,"mtime":1609741973284,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1609510240937,"results":"19","hashOfConfig":"18"},{"size":1949,"mtime":1611581843784,"results":"20","hashOfConfig":"18"},{"size":534,"mtime":1609926207873,"results":"21","hashOfConfig":"18"},{"size":6387,"mtime":1611582165044,"results":"22","hashOfConfig":"18"},{"size":6137,"mtime":1611747382976,"results":"23","hashOfConfig":"18"},{"size":1671,"mtime":1611480552070,"results":"24","hashOfConfig":"18"},{"size":435,"mtime":1611480552070,"results":"25","hashOfConfig":"18"},{"size":1595,"mtime":1611581539453,"results":"26","hashOfConfig":"18"},{"size":939,"mtime":1611581539457,"results":"27","hashOfConfig":"18"},{"size":958,"mtime":1611740398626,"results":"28","hashOfConfig":"18"},{"size":1065,"mtime":1610972773488,"results":"29","hashOfConfig":"18"},{"size":394,"mtime":1609742657295,"results":"30","hashOfConfig":"18"},{"size":2941,"mtime":1611581539457,"results":"31","hashOfConfig":"18"},{"size":804,"mtime":1611581539453,"results":"32","hashOfConfig":"18"},{"size":2139,"mtime":1611581539453,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"oj2auc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"/home/pranav/Github Others/savakhed/src/index.js",[],["73","74"],"/home/pranav/Github Others/savakhed/src/reportWebVitals.js",[],"/home/pranav/Github Others/savakhed/src/App.js",["75"],"import React, { Component } from \"react\";\nimport Listing from \"./container/listing/Listing\";\nimport Details from \"./container/details/Details\";\nimport LekhakList from \"./container/LekhakList/LekhakList\"\nimport MobileNav from \"./components/navbar/mobileNav\"\n\nimport { db } from \"./firebase\";\nimport Header from \"./components/header/Header\";\nimport AboutUs from \"./components/about-us/AboutUs\";\n\nconst detailsURLPattern = /\\/?details\\/[a-z0-9A-Z]{20}/;\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tshow: \"listing\",\n\t\t\tcurrentDetails: {},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst self = this;\n\t\twindow.addEventListener(\n\t\t\t\"hashchange\",\n\t\t\tfunction () {\n\t\t\t\t//console.log(\"The hash has changed!\");\n\t\t\t\tself.setPath();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tthis.setPath();\n\t}\n\n\tsetPath = () => {\n\t\tconst currURL = window.location.href.split(\"#\");\n\t\tif (currURL.length > 1) {\n\t\t\tlet endPart = currURL[1].toLowerCase();\n\t\t\tif (endPart.includes(\"details\")) {\n\t\t\t\tvar patt = detailsURLPattern;\n  \t\t\t\tif(patt.test(endPart))\n\t\t\t\t\tthis.setState({ show: \"details\" });\n\t\t\t}\n\t\t\telse if (endPart.includes(\"lekhaklist\")) {\n\t\t\t\tthis.setState({ show: \"lekhaklist\" });\n\t\t\t}\n\t\t\telse if (currURL[1].includes(\"aboutUs\")) {\n\t\t\t\tthis.setState({ show: \"aboutUs\" });\n\t\t\t} else {\n\t\t\t\tthis.setState({ show: \"listing\" });\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header url={this.state.show} />\n\t\t\t\t{this.state.show === \"details\" &&\n\t\t\t\t\t<Details bookDetail = {this.state.currentDetails} />\n\t\t\t\t}\n\t\t\t\t{this.state.show === \"lekhaklist\" && (\n\t\t\t\t\t<LekhakList\n\t\t\t\t\t\tsetCurrentDetails={(book) =>\n\t\t\t\t\t\t\tthis.setState({ currentDetails: book })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t\n\t\t\t\t{this.state.show === \"listing\" && (\n\t\t\t\t\t<Listing\n\t\t\t\t\t\tsetCurrentDetails={(book) =>\n\t\t\t\t\t\t\tthis.setState({ currentDetails: book })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{this.state.show === \"aboutUs\" && <AboutUs />}\n\t\t\t\t<MobileNav/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","/home/pranav/Github Others/savakhed/src/firebase.js",[],"/home/pranav/Github Others/savakhed/src/container/details/Details.jsx",["76","77","78","79"],"import React, { Component } from \"react\";\nimport \"./details.css\";\nimport Card from \"../../components/card/Card\";\nimport { db } from \"../../firebase\";\n\n\nclass Details extends Component {\n    constructor() {\n        super();\n        this.state = {\n            gotGoogleData: false,\n            GresultScore: 0,\n            GarticleBody: \"\",\n            Gname: \"\",\n            Gdescription: \"\",\n            gotFirebaseData: false,\n            jsonData:[],\n            bookDetail: {},\n            \n        };\n\n    }\n\n\n    componentDidMount() {\n        const { bookDetail = {} } = this.props;\n         if(!bookDetail.pustakName) {\n             this.getFirebaseData();\n         }\n         this.getGoogleData();\n\n    }\n\n\n    getIdFromUrl() {\n        const currURL = window.location.href.split(\"/\");\n        const urlID  = currURL[currURL.length-1];\n        //console.log(\"url id\", urlID);\n        return urlID;\n    }\n\n\n    getGoogleData() {\n        var xhr = new XMLHttpRequest()\n        var query = this.props.bookDetail.pustakNameEnglish\n\n        // get a callback when the server responds\n        xhr.addEventListener('load', () => {\n            //console.log(xhr.responseText)\n\n            // destructuring\n            const { itemListElement = [] } = JSON.parse(xhr.responseText);\n            const { result = {}, resultScore = {} } = itemListElement.length && itemListElement[0] || {};\n            const { detailedDescription = '', name = '', description = '' } = result;\n            const { articleBody = '' } = detailedDescription;\n            this.setState({\n                gotGoogleData: true,\n                GresultScore: resultScore,\n                GarticleBody: articleBody,\n                Gname: name,\n                Gdescription: description\n            });\n\n        })\n        xhr.open('GET', 'https://kgsearch.googleapis.com/v1/entities:search?query=' + query + '&key=AIzaSyAY9Boy7kdeOmi7JYAfI2zR8Ij3iF_zgxM&limit=1&indent=True')\n        xhr.send()\n    }\n\n\n    async getFirebaseData() {\n        const doc = await db.collection(\"bookList\")\n            .doc(this.getIdFromUrl()).get()\n\n        const firebaseBookDetail = doc.data();\n        this.setState({\n            bookDetail : firebaseBookDetail\n        });\n    }\n\n\n    //Return one string for array of name\n    nameArrayToString(nameArray) {\n        let strName = \"\";\n        for (let i = 0; i < nameArray.length; i++) {\n            if (i !== 0)\n                strName += \" \";\n        }\n        return strName;\n    }\n\n\n    render() {\n        const { bookDetail: stateBookDetails } = this.state;\n        const { bookDetail: propsBookDetails } = this.props;\n        //console.log(propsBookDetails)\n        const currentBook = propsBookDetails.pustakName ? propsBookDetails: stateBookDetails;\n        return (\n            <div className=\"fullDetails\">\n                <div className=\"details_back\">\n                    <a href=\"#/search\">\n                        <button className=\"back_btn\">\n                            Go Back\n                        </button>\n                    </a>\n                </div>\n\n                {/* conditional rendering, if details are found */}\n                <div className=\"flex-container\">\n                {currentBook.pustakName &&    \n                        <Card bookName=\"Book Details\">\n                        <div className=\"cardDetails\">\n                            <div className=\"book_details\">     \n                                <div className=\"rows\">\n                                    <div className=\"col1\">\n                                    <span className=\"label\">Pustak Name</span>\n                                    <div className=\"book_name\">{currentBook.pustakName.join(\" \")}</div>\n                                    </div>\n                                    <div className=\"col2\">\n                                    <span className=\"label\">Lekhak</span>\n                                    <div className=\"book_name\">{currentBook.lekhak.join(\" \")}</div>\n                                    </div>\n                                </div>\n                                <div className=\"rows\">\n                                    <div className=\"col1\">\n                                    <span className=\"label\">Dakhal Id</span>\n                                    <div className=\"book_name\">{currentBook.dakhalId} </div>\n                                    </div>\n                                    <div className=\"col2\">\n                                    <span className=\"label\">Vibhag Id</span>\n                                    <div className=\"book_name\">{currentBook.vibhagId}</div>\n                                    </div>\n                                </div>\n                                <div className=\"rows\">\n                                    <div>\n                                    <span className=\"label\">Pustak Prakar</span>\n                                    <div className=\"book_name\">{currentBook.pustakPrakar}</div>\n                                    </div>\n                                </div>\n                                {/* <hr className=\"hr-inLabel\" /> */}\n                                <br />\n                            </div>\n                        </div>\n                        </Card>\n\n                }\n                {this.state.GresultScore > 140 && this.state.GarticleBody !== \"\" &&\n                    <Card bookName={this.state.Gname} whichCard=\"google\">\n                        <div className=\"googleDetails\">\n                            <div className=\"eachgoogleDetails\">Result Score : <div className=\"googleResult\">{this.state.GresultScore}</div></div>\n                            {this.state.GarticleBody != \"\" &&\n                            <div className=\"eachgoogleDetails\">Article Body : <div className=\"googleResult\">{this.state.GarticleBody}</div></div>\n                            } \n                            {this.state.Gdescription != \"\" &&\n                            <div className=\"eachgoogleDetails\">Description : <div className=\"googleResult\">{this.state.Gdescription}</div></div>\n                            }    \n\n                            <div className=\"source\">source : Google </div>\n                        </div>\n                    </Card>\n                }\n\n                </div>\n                \n\n            </div>\n        )\n    }\n}\n\nexport default Details;\n","/home/pranav/Github Others/savakhed/src/container/LekhakList/LekhakList.jsx",["80","81","82","83","84"],"import React, { Component } from 'react'\nimport './LekhakList.css'\nimport ListSection from \"../../components/list-section/ListSection\";\nimport Alphabets from './Alphabets';\nimport Akshar from './Akshar';\nimport { db } from '../../firebase'\n\n\n\nclass LekhakList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorList: [],\n            matching_authors: [],\n            activeTab: '1',\n            lekhakArray: [],\n            lekhakDict: {},\n            searched: false,\n\t\t\ttableHeaders: [],\n            results: [],\n            currentLekhak :\"\",\n            isBtnClicked : null\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n\n    getLekhakNames = value => async () => {\n        this.setState({isBtnClicked : value})\n        let val = value;\n        //console.log(val);\n        const doc = await db.collection(\"newMappingTrial\").doc(value).get();\n        let lekhakNamesDict = doc.data().names;\n        lekhakNamesDict = this.sortKeys(lekhakNamesDict);\n        this.setState(\n            { lekhakDict: lekhakNamesDict }\n        );\n        //console.log(lekhakNamesDict);\n    }\n\n    getLekhakBooks = value => async () => {\n        \n        let lekhakName = value;\n        this.setState({\n            lekhakDict: {},\n            searched: false,\n\t\t\ttableHeaders: [],\n            results: [],\n            currentLekhak: lekhakName\n        });\n        await db.collection(\"bookList\")\n            .where(\"lekhakFullName\", \"==\", 'जॉन ग्रिशम')\n            .get()\n            .then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    let currentBook = doc.data();\n                    this.setState({\n                        results : this.state.results.concat([{...currentBook, id: doc.id }])\n                    });\n                    console.log(currentBook.lekhak, currentBook.pustakName);\n                });\n            });\n        this.setState({\n            tableHeaders: [\"Dakhal-ID\", \"Vibhag-ID\", \"Book\", \"Author\"],\n            searched : true\n        });\n        //const bookNamesArray = doc.data().lekhakNameJoint;\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    renderAuthors = () => {\n        return (\n            Object.keys(this.state.lekhakDict).map((key, index) => (\n                <div className=\"renderAuthors\">\n                    <div className=\"authorName\">{key} - <span>{this.state.lekhakDict[key]} Books</span></div>\n                    <div className=\"bookNames\"><p onClick={this.getLekhakBooks(key)}>View Books</p></div>\n                </div>\n            ))\n        );\n    }\n\n    renderAlphabets = (alpha) => {\n        return (\n            alpha.map((letter) => (\n                <button value={letter.key} className={this.state.isBtnClicked === letter.key? \"alphabetsClicked\" : \"alphabetsUnclicked\"} onClick={this.getLekhakNames(letter.key)}>{letter.key}</button>\n            ))\n        )\n    }\n\n    sortKeys(obj_1) { \n        var key = Object.keys(obj_1) \n            .sort(function order(key1, key2) { \n                if (key1 < key2) return -1; \n                else if (key1 > key2) return +1; \n                else return 0; \n            });  \n          \n        var temp = {};   \n        for (var i = 0; i < key.length; i++) { \n            temp[key[i]] = obj_1[key[i]]; \n            delete obj_1[key[i]]; \n        }\n\n        for (var i = 0; i < key.length; i++) { \n            obj_1[key[i]] = temp[key[i]]; \n        }\n          \n        return obj_1; \n    }\n\n    render() {\n        const { character } = this.state;\n        return (\n            <div className=\"lekhakList\">\n                \n                <div>\n                    <div>\n                        <div className=\"toggleBtn\">\n                            <button \n                            className={this.state.activeTab === \"1\" ? \"clickedBtn\" : \"unclickedBtn\"} \n                            onClick={() => { this.toggle('1'); }}\n                            >\n                                Marathi\n                            </button>\n                            <button \n                            className={this.state.activeTab === \"2\" ? \"clickedBtn\" : \"unclickedBtn\"} \n                            onClick={() => { this.toggle('2'); }}\n                            >\n                                English\n                            </button>\n                        </div>\n                        <div>\n                            <div>\n                                {this.state.activeTab == 1 ?\n                                    <div className=\"ButtonContainer\">\n                                        {this.renderAlphabets(Akshar)}\n                                    </div>\n                                    : null}\n                            </div>\n                            <div>\n                                {this.state.activeTab == 2 ?\n                                    <div className=\"ButtonContainer\">\n                                        {this.renderAlphabets(Alphabets)}\n                                    </div>\n                                    : null}\n                            </div>\n                        </div>\n                    </div>    \n                </div>\n                \n                {!this.state.searched && \n                    <div className=\"authorsList\">\n                            {this.renderAuthors()}\n                    </div>\n                }\n                {this.state.searched && \n                    <div className=\"lekhakBooklist\">\n                        <h1>लेखक : { this.state.currentLekhak }</h1>\n                        <ListSection\n                            setCurrentDetails={this.props.setCurrentDetails}\n                            tableHeaders={this.state.tableHeaders}\n                            tableElements={this.state.results}\n                            searched={this.state.searched}\n                        />\n                    </div>\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default LekhakList;","/home/pranav/Github Others/savakhed/src/components/navbar/mobileNav.jsx",["85","86"],"import React, { Component } from 'react'\nimport './mobileNav.css';\nimport searchSvg from \"../../svg/search.svg\"\nimport authorSvg from \"../../svg/author.svg\"\nimport authorSvg2 from \"../../svg/author2.svg\"\nimport aboutSvg from \"../../svg/about.svg\"\nexport default class mobileNav extends Component {\n    constructor(){\n        super();\n        this.state = {\n            isClicked : 1\n        }\n        this.setButton = this.setButton.bind(this);\n    }\n\n    setButton(id){\n\n    }\n\n    render() {\n        return (\n            <div className=\"mobileNav\">\n                {/* search */}\n                <div className={this.state.isClicked === 1 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\n                    <a href=\"#/search\" onClick={() => this.setState({ isClicked: 1 })}>\n                        <img src={searchSvg} className=\"searchSvg\" alt=\"Search Books\" />\n                    </a>\n                </div>\n                {/* lekhak list */}\n                <div className={this.state.isClicked === 2 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\n                    <a href=\"#/lekhaklist\" onClick={() => this.setState({ isClicked: 2})}>\n                        <img src={authorSvg2} className=\"lekhakSvg\" alt=\"Lekhak List\" />\n                    </a>\n                </div>\n                {/* about */}\n                <div className={this.state.isClicked === 3 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\n                    <a href=\"#\" onClick={() => this.setState({ isClicked: 3})}>\n                        <img src={aboutSvg} className=\"lekhakSvg\" alt=\"About US\" />\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/pranav/Github Others/savakhed/src/components/card/Card.js",[],"/home/pranav/Github Others/savakhed/src/components/input-section/InputSection.jsx",[],"/home/pranav/Github Others/savakhed/src/components/list-section/ListSection.jsx",[],"/home/pranav/Github Others/savakhed/src/container/LekhakList/Alphabets.jsx",[],"/home/pranav/Github Others/savakhed/src/container/LekhakList/Akshar.jsx",[],"/home/pranav/Github Others/savakhed/src/components/switch/Switch.jsx",[],["87","88"],"/home/pranav/Github Others/savakhed/src/container/listing/Listing.jsx",[],"/home/pranav/Github Others/savakhed/src/components/about-us/AboutUs.jsx",[],"/home/pranav/Github Others/savakhed/src/components/header/Header.jsx",["89","90"],"import React, { useState, useEffect } from \"react\";\nimport \"./header.css\";\n// import { ReactComponent as Arrow } from \"./caret.svg\";\n\nfunction Header() {\n\tconst setLabel = () => {\n\t\tconst href = window.location.href;\n\t\tif (href.includes(\"lekhakList\")) return \"lekhak-list\";\n\t\tif (href.includes(\"aboutUs\")) return \"about-us\";\n\t\tif (href.includes(\"details\")) return \"details\";\n\t\tif (href.includes(\"search\")) return \"search\";\n\t\treturn \"search\";\n\t};\n\n\tconst removeActive = () => {\n\t\tconst nav = document.getElementsByClassName(\"nav-bar\")[0];\n\t\tconst children = nav.children;\n\n\t\tif (children) {\n\t\t\t[...children].forEach((element) => {\n\t\t\t\telement\n\t\t\t\t\t? element.children[0].classList.remove(\"active\")\n\t\t\t\t\t: console.log();\n\t\t\t});\n\t\t}\n\t};\n\n\tconst hashChange = () => {\n\t\twindow.addEventListener(\n\t\t\t\"hashchange\",\n\t\t\tfunction () {\n\t\t\t\tconsole.log(\"The hash has changed!\");\n\t\t\t\tif (document.getElementById(setLabel()) != null) {\n\t\t\t\t\tremoveActive();\n\t\t\t\t\tdocument.getElementById(setLabel()).classList.add(\"active\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t};\n\n\tconst onClickHandler = (target) => {\n\t\tremoveActive();\n\t\tdocument.getElementById(target).classList.add(\"active\");\n\t};\n\n\tuseEffect(() => {\n\t\tif (document.getElementById(setLabel()) != null) {\n\t\t\tdocument.getElementById(setLabel()).classList.add(\"active\");\n\t\t}\n\t\thashChange();\n\t}, []);\n\n\treturn (\n\t\t<nav className=\"nav-bar\">\n\t\t\t{window.location.href.includes(\"details\") ? (\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\twindow.history.go(-1);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t&lt;\n\t\t\t\t</button>\n\t\t\t) : null}\n\t\t\t<a\n\t\t\t\thref=\"/savakhed/#/search\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonClickHandler(\"search\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"link-placeholders\" id=\"search\">\n\t\t\t\t\tSearch\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\thref=\"/savakhed/#/lekhakList\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonClickHandler(\"lekhak-list\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"link-placeholders\" id=\"lekhak-list\">\n\t\t\t\t\tLekhak List\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\thref=\"/savakhed/#/aboutUs\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonClickHandler(\"about-us\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"link-placeholders\" id=\"about-us\">\n\t\t\t\t\tAbout Us\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t</nav>\n\t);\n}\n\nexport default Header;\n",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":53,"column":78,"nodeType":"101","messageId":"102","endLine":53,"endColumn":80},{"ruleId":"99","severity":1,"message":"100","line":53,"column":100,"nodeType":"101","messageId":"102","endLine":53,"endColumn":102},{"ruleId":"103","severity":1,"message":"104","line":150,"column":54,"nodeType":"105","messageId":"106","endLine":150,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":153,"column":54,"nodeType":"105","messageId":"106","endLine":153,"endColumn":56},{"ruleId":"95","severity":1,"message":"107","line":33,"column":13,"nodeType":"97","messageId":"98","endLine":33,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":112,"column":18,"nodeType":"97","messageId":"110","endLine":112,"endColumn":19},{"ruleId":"95","severity":1,"message":"111","line":120,"column":17,"nodeType":"97","messageId":"98","endLine":120,"endColumn":26},{"ruleId":"103","severity":1,"message":"112","line":142,"column":55,"nodeType":"105","messageId":"106","endLine":142,"endColumn":57},{"ruleId":"103","severity":1,"message":"112","line":149,"column":55,"nodeType":"105","messageId":"106","endLine":149,"endColumn":57},{"ruleId":"95","severity":1,"message":"113","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":37,"column":21,"nodeType":"116","endLine":37,"endColumn":80},{"ruleId":"91","replacedBy":"117"},{"ruleId":"93","replacedBy":"118"},{"ruleId":"95","severity":1,"message":"119","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":52,"column":5,"nodeType":"122","endLine":52,"endColumn":7,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'val' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'character' is assigned a value but never used.","Expected '===' and instead saw '=='.","'authorSvg' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["124"],["125"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hashChange'. Either include it or remove the dependency array.","ArrayExpression",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [hashChange]",{"range":"129","text":"130"},[1318,1320],"[hashChange]"]
