[{"/home/pranav/Github Others/savakhed/src/index.js":"1","/home/pranav/Github Others/savakhed/src/reportWebVitals.js":"2","/home/pranav/Github Others/savakhed/src/App.js":"3","/home/pranav/Github Others/savakhed/src/firebase.js":"4","/home/pranav/Github Others/savakhed/src/container/Listing.jsx":"5","/home/pranav/Github Others/savakhed/src/container/details/Details.jsx":"6","/home/pranav/Github Others/savakhed/src/container/LekhakList/LekhakList.jsx":"7","/home/pranav/Github Others/savakhed/src/components/navbar/mobileNav.jsx":"8","/home/pranav/Github Others/savakhed/src/container/mulakshare.jsx":"9","/home/pranav/Github Others/savakhed/src/components/card/Card.js":"10","/home/pranav/Github Others/savakhed/src/components/input-section/InputSection.jsx":"11","/home/pranav/Github Others/savakhed/src/components/list-section/ListSection.jsx":"12","/home/pranav/Github Others/savakhed/src/container/LekhakList/Alphabets.jsx":"13","/home/pranav/Github Others/savakhed/src/container/LekhakList/Akshar.jsx":"14","/home/pranav/Github Others/savakhed/src/components/switch/Switch.jsx":"15"},{"size":499,"mtime":1609741973284,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1609510240937,"results":"18","hashOfConfig":"17"},{"size":1659,"mtime":1611578798070,"results":"19","hashOfConfig":"17"},{"size":534,"mtime":1609926207873,"results":"20","hashOfConfig":"17"},{"size":2937,"mtime":1611141513547,"results":"21","hashOfConfig":"17"},{"size":6382,"mtime":1611578661851,"results":"22","hashOfConfig":"17"},{"size":5500,"mtime":1611480552070,"results":"23","hashOfConfig":"17"},{"size":1671,"mtime":1611480552070,"results":"24","hashOfConfig":"17"},{"size":468,"mtime":1610374431314,"results":"25","hashOfConfig":"17"},{"size":435,"mtime":1611480552070,"results":"26","hashOfConfig":"17"},{"size":1035,"mtime":1609742657291,"results":"27","hashOfConfig":"17"},{"size":931,"mtime":1610696208002,"results":"28","hashOfConfig":"17"},{"size":958,"mtime":1611139472574,"results":"29","hashOfConfig":"17"},{"size":1065,"mtime":1610972773488,"results":"30","hashOfConfig":"17"},{"size":394,"mtime":1609742657295,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"oj2auc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/pranav/Github Others/savakhed/src/index.js",[],["65","66"],"/home/pranav/Github Others/savakhed/src/reportWebVitals.js",[],"/home/pranav/Github Others/savakhed/src/App.js",["67"],"/home/pranav/Github Others/savakhed/src/firebase.js",[],"/home/pranav/Github Others/savakhed/src/container/Listing.jsx",[],"/home/pranav/Github Others/savakhed/src/container/details/Details.jsx",["68","69","70","71"],"/home/pranav/Github Others/savakhed/src/container/LekhakList/LekhakList.jsx",["72","73","74","75"],"import React, { Component } from 'react'\nimport './LekhakList.css'\nimport ListSection from \"../../components/list-section/ListSection\";\nimport Alphabets from './Alphabets';\nimport Akshar from './Akshar';\nimport { db } from '../../firebase'\n\n\n\nclass LekhakList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorList: [],\n            matching_authors: [],\n            activeTab: '1',\n            lekhakArray: [],\n            searched: false,\n\t\t\ttableHeaders: [],\n            results: [],\n            currentLekhak :\"\",\n            isBtnClicked : null\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n\n    getLekhakNames = value => async () => {\n        this.setState({isBtnClicked : value})\n        let val = value;\n        //console.log(val);\n        const doc = await db.collection(\"lekhakMapping\").doc(value).get();\n        const lekhakNamesArray = doc.data().names;\n        this.setState(\n            { lekhakArray: lekhakNamesArray }\n        );\n        //console.log(lekhakNamesArray);\n    }\n\n    getLekhakBooks = value => async () => {\n        \n        let lekhakName = value;\n        this.setState({\n            lekhakArray: [],\n            searched: false,\n\t\t\ttableHeaders: [],\n            results: [],\n            currentLekhak: lekhakName\n        });\n        await db.collection(\"bookList\")\n            .where(\"lekhakNameJoint\", \"==\", lekhakName)\n            .get()\n            .then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    let currentBook = doc.data();\n                    this.setState({\n                        results : this.state.results.concat([{...currentBook, id: doc.id }])\n                    });\n                    //console.log(currentBook.lekhak, currentBook.pustakName);\n                });\n            });\n        this.setState({\n            tableHeaders: [\"Dakhal-ID\", \"Vibhag-ID\", \"Book\", \"Author\"],\n            searched : true\n        });\n        //const bookNamesArray = doc.data().lekhakNameJoint;\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    renderAuthors = () => {\n        return (\n            this.state.lekhakArray.map((data) => (\n                <div className=\"renderAuthors\">\n                    <div className=\"authorName\">{data}</div>\n                    <div className=\"bookNames\"><p onClick={this.getLekhakBooks(data)}>View Books</p></div>\n                </div>)));\n    }\n\n    renderAlphabets = (alpha) => {\n        return (\n            alpha.map((letter) => (\n                <button value={letter.key} className={this.state.isBtnClicked === letter.key? \"alphabetsClicked\" : \"alphabetsUnclicked\"} onClick={this.getLekhakNames(letter.key)}>{letter.key}</button>\n            )\n            )\n        )\n    }\n\n    render() {\n        const { character } = this.state;\n        return (\n            <div className=\"lekhakList\">\n                {!this.state.searched &&\n                    <div>\n                        <div>\n                            <div className=\"toggleBtn\">\n                                <button \n                                className={this.state.activeTab === \"1\" ? \"clickedBtn\" : \"unclickedBtn\"} \n                                onClick={() => { this.toggle('1'); }}\n                                >\n                                    Marathi\n                                </button>\n                                <button \n                                className={this.state.activeTab === \"2\" ? \"clickedBtn\" : \"unclickedBtn\"} \n                                onClick={() => { this.toggle('2'); }}\n                                >\n                                    English\n                                </button>\n                            </div>\n                            <div>\n                                <div>\n                                    {this.state.activeTab == 1 ?\n                                        <div className=\"ButtonContainer\">\n                                            {this.renderAlphabets(Akshar)}\n                                        </div>\n                                        : null}\n                                </div>\n                                <div>\n                                    {this.state.activeTab == 2 ?\n                                        <div className=\"ButtonContainer\">\n                                            {this.renderAlphabets(Alphabets)}\n                                        </div>\n                                        : null}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"authorsList\">\n                            {this.renderAuthors()}\n                        </div>\n                    </div>\n                }\n                {this.state.searched && \n                    <div className=\"lekhakBooklist\">\n                        <h1>लेखक : { this.state.currentLekhak }</h1>\n                        <ListSection\n                            setCurrentDetails={this.props.setCurrentDetails}\n                            tableHeaders={this.state.tableHeaders}\n                            tableElements={this.state.results}\n                            searched={this.state.searched}\n                        />\n                    </div>\n                }\n            </div>\n\n        )\n    }\n\n}\n\nexport default LekhakList;","/home/pranav/Github Others/savakhed/src/components/navbar/mobileNav.jsx",["76","77"],"import React, { Component } from 'react'\nimport './mobileNav.css';\nimport searchSvg from \"../../svg/search.svg\"\nimport authorSvg from \"../../svg/author.svg\"\nimport authorSvg2 from \"../../svg/author2.svg\"\nimport aboutSvg from \"../../svg/about.svg\"\nexport default class mobileNav extends Component {\n    constructor(){\n        super();\n        this.state = {\n            isClicked : 1\n        }\n        this.setButton = this.setButton.bind(this);\n    }\n\n    setButton(id){\n\n    }\n\n    render() {\n        return (\n            <div className=\"mobileNav\">\n                {/* search */}\n                <div className={this.state.isClicked === 1 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\n                    <a href=\"#/search\" onClick={() => this.setState({ isClicked: 1 })}>\n                        <img src={searchSvg} className=\"searchSvg\" alt=\"Search Books\" />\n                    </a>\n                </div>\n                {/* lekhak list */}\n                <div className={this.state.isClicked === 2 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\n                    <a href=\"#/lekhaklist\" onClick={() => this.setState({ isClicked: 2})}>\n                        <img src={authorSvg2} className=\"lekhakSvg\" alt=\"Lekhak List\" />\n                    </a>\n                </div>\n                {/* about */}\n                <div className={this.state.isClicked === 3 ? \"mobileNav_clicked\" : \"mobileNav_unclicked\"}>\n                    <a href=\"#\" onClick={() => this.setState({ isClicked: 3})}>\n                        <img src={aboutSvg} className=\"lekhakSvg\" alt=\"About US\" />\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/pranav/Github Others/savakhed/src/container/mulakshare.jsx",[],"/home/pranav/Github Others/savakhed/src/components/card/Card.js",[],"/home/pranav/Github Others/savakhed/src/components/input-section/InputSection.jsx",[],"/home/pranav/Github Others/savakhed/src/components/list-section/ListSection.jsx",[],"/home/pranav/Github Others/savakhed/src/container/LekhakList/Alphabets.jsx",[],"/home/pranav/Github Others/savakhed/src/container/LekhakList/Akshar.jsx",[],"/home/pranav/Github Others/savakhed/src/components/switch/Switch.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":53,"column":78,"nodeType":"88","messageId":"89","endLine":53,"endColumn":80},{"ruleId":"86","severity":1,"message":"87","line":53,"column":100,"nodeType":"88","messageId":"89","endLine":53,"endColumn":102},{"ruleId":"90","severity":1,"message":"91","line":150,"column":54,"nodeType":"92","messageId":"93","endLine":150,"endColumn":56},{"ruleId":"90","severity":1,"message":"91","line":153,"column":54,"nodeType":"92","messageId":"93","endLine":153,"endColumn":56},{"ruleId":"82","severity":1,"message":"94","line":32,"column":13,"nodeType":"84","messageId":"85","endLine":32,"endColumn":16},{"ruleId":"82","severity":1,"message":"95","line":96,"column":17,"nodeType":"84","messageId":"85","endLine":96,"endColumn":26},{"ruleId":"90","severity":1,"message":"96","line":118,"column":59,"nodeType":"92","messageId":"93","endLine":118,"endColumn":61},{"ruleId":"90","severity":1,"message":"96","line":125,"column":59,"nodeType":"92","messageId":"93","endLine":125,"endColumn":61},{"ruleId":"82","severity":1,"message":"97","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":37,"column":21,"nodeType":"100","endLine":37,"endColumn":80},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'val' is assigned a value but never used.","'character' is assigned a value but never used.","Expected '===' and instead saw '=='.","'authorSvg' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]