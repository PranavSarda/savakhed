[{"/home/kundank/Music/sava new/savakhed/src/index.js":"1","/home/kundank/Music/sava new/savakhed/src/reportWebVitals.js":"2","/home/kundank/Music/sava new/savakhed/src/App.js":"3","/home/kundank/Music/sava new/savakhed/src/firebase.js":"4","/home/kundank/Music/sava new/savakhed/src/container/Listing.jsx":"5","/home/kundank/Music/sava new/savakhed/src/container/details/Details.jsx":"6","/home/kundank/Music/sava new/savakhed/src/components/card/Card.js":"7","/home/kundank/Music/sava new/savakhed/src/container/mulakshare.jsx":"8","/home/kundank/Music/sava new/savakhed/src/components/input-section/InputSection.jsx":"9","/home/kundank/Music/sava new/savakhed/src/components/list-section/ListSection.jsx":"10","/home/kundank/Music/sava new/savakhed/src/components/switch/Switch.jsx":"11","/home/kundank/Music/sava new/savakhed/src/container/LekhakList/LekhakList.jsx":"12","/home/kundank/Music/sava new/savakhed/src/container/LekhakList/Alphabets.jsx":"13","/home/kundank/Music/sava new/savakhed/src/container/LekhakList/Akshar.jsx":"14"},{"size":499,"mtime":1609567021640,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609567021640,"results":"17","hashOfConfig":"16"},{"size":1392,"mtime":1610972038313,"results":"18","hashOfConfig":"16"},{"size":534,"mtime":1609938948719,"results":"19","hashOfConfig":"16"},{"size":2937,"mtime":1610700867529,"results":"20","hashOfConfig":"16"},{"size":6758,"mtime":1610976285341,"results":"21","hashOfConfig":"16"},{"size":387,"mtime":1610976119082,"results":"22","hashOfConfig":"16"},{"size":468,"mtime":1610700867533,"results":"23","hashOfConfig":"16"},{"size":1035,"mtime":1609756745156,"results":"24","hashOfConfig":"16"},{"size":931,"mtime":1610700867529,"results":"25","hashOfConfig":"16"},{"size":394,"mtime":1609756745156,"results":"26","hashOfConfig":"16"},{"size":5630,"mtime":1610976686547,"results":"27","hashOfConfig":"16"},{"size":1356,"mtime":1610966084359,"results":"28","hashOfConfig":"16"},{"size":1065,"mtime":1610967472501,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"k9vox8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/kundank/Music/sava new/savakhed/src/index.js",[],["63","64"],"/home/kundank/Music/sava new/savakhed/src/reportWebVitals.js",[],"/home/kundank/Music/sava new/savakhed/src/App.js",["65"],"import React, { Component } from \"react\";\nimport Listing from \"./container/Listing\";\nimport Details from \"./container/details/Details\";\nimport LekhakList from \"./container/LekhakList/LekhakList\"\n\nimport { db } from \"./firebase\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tshow: \"listing\",\n\t\t\tcurrentDetails: {\n\t\t\t},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst self = this;\n\t\twindow.addEventListener(\n\t\t\t\"hashchange\",\n\t\t\tfunction () {\n\t\t\t\tconsole.log(\"The hash has changed!\");\n\t\t\t\tself.setPath();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tthis.setPath();\n\t}\n\n\tsetPath = () => {\n\t\tconst currURL = window.location.href.split(\"#\");\n\t\tif (currURL.length > 1) {\n\t\t\tif (currURL[1].includes(\"details\")) {\n\t\t\t\tthis.setState({ show: \"details\" });\n\t\t\t} else if (currURL[1].includes(\"lekhakList\")) {\n\t\t\t\tthis.setState({ show: \"lekhakList\" });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({ show: \"listing\" });\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{this.state.show === \"details\" &&\n\t\t\t\t\t<Details bookDetail = {this.state.currentDetails} />\n\t\t\t\t}\n\t\t\t\t{this.state.show === \"lekhakList\" &&\n\t\t\t\t\t<LekhakList />\t\t\t//Change this route----------------------------------------\n\t\t\t\t}\n\t\t\t\t{this.state.show === \"listing\" && (\n\t\t\t\t\t<Listing\n\t\t\t\t\t\tsetCurrentDetails={(book) =>\n\t\t\t\t\t\t\tthis.setState({ currentDetails: book })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","/home/kundank/Music/sava new/savakhed/src/firebase.js",[],"/home/kundank/Music/sava new/savakhed/src/container/Listing.jsx",[],"/home/kundank/Music/sava new/savakhed/src/container/details/Details.jsx",["66","67"],"import React, { Component } from 'react'\nimport './details.css'\nimport Card from '../../components/card/Card'\nimport { db } from '../../firebase'\n\n\nclass Details extends Component {\n    constructor() {\n        super();\n        this.state = {\n            gotGoogleData: false,\n            GresultScore: 0,\n            GarticleBody: \"\",\n            Gname: \"\",\n            Gdescription: \"\",\n            gotFirebaseData: false,\n            jsonData:[],\n            bookDetail: {},\n            \n        };\n\n    }\n\n\n    componentDidMount() {\n        const { bookDetail = {} } = this.props;\n         if(!bookDetail.pustakName) {\n             this.getFirebaseData();\n         }\n         this.getGoogleData();\n\n    }\n\n\n    getIdFromUrl() {\n        const currURL = window.location.href.split(\"/\");\n        const urlID  = currURL[currURL.length-1];\n        //console.log(\"url id\", urlID);\n        return urlID;\n    }\n\n\n    getGoogleData() {\n        var xhr = new XMLHttpRequest()\n        var query = this.props.bookDetail.pustakNameEnglish\n\n        // get a callback when the server responds\n        xhr.addEventListener('load', () => {\n            //console.log(xhr.responseText)\n\n            this.setState({ jsonData: JSON.parse(xhr.responseText) })\n            // destructuring\n            const { jsonData } = this.state;\n            const { itemListElement = [] } = jsonData;\n            const { result = {}, resultScore = {} } = itemListElement[0];\n            const { detailedDescription = '', name = {}, description = '' } = result;\n            const { articleBody = '' } = detailedDescription;\n            this.setState({\n                gotGoogleData: true,\n                GresultScore: resultScore,\n                GarticleBody: articleBody,\n                Gname: name,\n                Gdescription: description\n            });\n\n        })\n        xhr.open('GET', 'https://kgsearch.googleapis.com/v1/entities:search?query=' + query + '&key=AIzaSyAY9Boy7kdeOmi7JYAfI2zR8Ij3iF_zgxM&limit=1&indent=True')\n        xhr.send()\n    }\n\n\n    async getFirebaseData() {\n        const doc = await db.collection(\"bookList\")\n            .doc(this.getIdFromUrl()).get()\n\n        const firebaseBookDetail = doc.data();\n        this.setState({\n            bookDetail : firebaseBookDetail\n        });\n        // console.log(\"Firebase Book Details\");\n        // console.log(firebaseBookDetail);\n    }\n\n\n    //Return one string for array of name\n    nameArrayToString(nameArray) {\n        let strName = \"\";\n        for (let i = 0; i < nameArray.length; i++) {\n            if (i !== 0)\n                strName += \" \";\n        }\n        return strName;\n    }\n\n\n  \n\n    render() {\n        const { bookDetail: stateBookDetails } = this.state;\n        const { bookDetail: propsBookDetails } = this.props;\n        //console.log(propsBookDetails)\n        const currentBook = propsBookDetails.pustakName ? propsBookDetails: stateBookDetails;\n        return (\n            <div>\n                <div className=\"details_back\">\n                    <a href=\"#/search\">\n                        <button className=\"back_btn\">\n                            Go Back\n                        </button>\n                    </a>\n                    <hr className=\"hr\" />\n                </div>\n\n                {/* conditional rendering, if details are found */}\n                {currentBook.pustakName &&\n                    <div className=\"flex-container\">\n                        <Card bookName=\"Book Details\">\n                        <div className=\"cardDetails\">\n                            <div className=\"details_image\">\n                                <img src=\"https://m.media-amazon.com/images/I/51Z0nLAfLmL.jpg\" alt=\"Book Cover\" className=\"book_image\" />\n                            </div>\n                            <div className=\"book_details\">\n                                <hr className=\"hr-inLabel\" />\n                                <div className=\"rows\">\n                                    <span className=\"label\">dakhalId</span>\n                                    <span className=\"book_name\">{currentBook.dakhalId} </span>\n                                </div>\n                                <hr className=\"hr-inLabel\" />\n                                <div className=\"rows\">\n                                    <span className=\"label\">vibhagId</span>\n                                    <span className=\"book_name\">{currentBook.vibhagId}</span>\n                                </div>\n                                <hr className=\"hr-inLabel\" />\n                                <div className=\"rows\">\n                                    <span className=\"label\">pustakName</span>\n                                    <span className=\"book_name\">{currentBook.pustakName.join(\" \")}</span>\n                                </div>\n                                <hr className=\"hr-inLabel\" />\n                                <div className=\"rows\">\n                                    <span className=\"label\">lekhak</span>\n                                    <span className=\"book_name\">{currentBook.lekhak.join(\" \")}</span>\n                                </div>\n                                <hr className=\"hr-inLabel\" />\n                                <div className=\"rows\">\n                                    <span className=\"label\">pustakPrakar</span>\n                                    <span className=\"book_name\">{currentBook.pustakPrakar}</span>\n                                </div>\n                                <hr className=\"hr-inLabel\" />\n                                <br />\n                            </div>\n                        </div>\n                        </Card>\n                    </div>\n                }\n\n                {this.state.GresultScore > 140 && this.state.GarticleBody !== \"\" &&\n                    <Card bookName={this.state.Gname}>\n                        <div className=\"googleDetails\">\n                            <div className=\"eachgoogleDetails\">Result Score : <div className=\"googleResult\">{this.state.GresultScore}</div></div>\n                            {this.state.GarticleBody != \"\" &&\n                            <div className=\"eachgoogleDetails\">Article Body : <div className=\"googleResult\">{this.state.GarticleBody}</div></div>\n                            } \n                            {this.state.Gdescription != \"\" &&\n                            <div className=\"eachgoogleDetails\">Description : <div className=\"googleResult\">{this.state.Gdescription}</div></div>\n                            }    \n\n                            <div className=\"source\">source : Google </div>\n                        </div>\n                    </Card>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Details;","/home/kundank/Music/sava new/savakhed/src/components/card/Card.js",[],"/home/kundank/Music/sava new/savakhed/src/container/mulakshare.jsx",[],"/home/kundank/Music/sava new/savakhed/src/components/input-section/InputSection.jsx",[],"/home/kundank/Music/sava new/savakhed/src/components/list-section/ListSection.jsx",[],"/home/kundank/Music/sava new/savakhed/src/components/switch/Switch.jsx",[],["68","69"],"/home/kundank/Music/sava new/savakhed/src/container/LekhakList/LekhakList.jsx",["70","71","72"],"import React, { Component } from 'react'\nimport './LekhakList.css'\nimport Card from '../../components/card/Card'\nimport { TabContent, TabPane, NavLink} from 'reactstrap';\nimport classnames from 'classnames';\nimport Alphabets from './Alphabets';\nimport Akshar from './Akshar';\nimport { db } from '../../firebase'\n\nconst BookDetails = [\n\t{\n\t\tid: \"1\",\n\t\t\"vibhag id\": \"11\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n\t{\n\t\tid: \"2\",\n\t\t\"vibhag id\": \"22\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"3\",\n\t\t\"vibhag id\": \"33\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"4\",\n\t\t\"vibhag id\": \"44\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n\t{\n\t\tid: \"5\",\n\t\t\"vibhag id\": \"55\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"6\",\n\t\t\"vibhag id\": \"66\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"7\",\n\t\t\"vibhag id\": \"77\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n\t{\n\t\tid: \"8\",\n\t\t\"vibhag id\": \"88\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"9\",\n\t\t\"vibhag id\": \"99\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"1\",\n\t\t\"vibhag id\": \"11\",\n\t\t\"bookName\": \"Wings of Fire\",\n\t\t\"author\": \"APJ\",\n\t},\n\t{\n\t\tid: \"2\",\n\t\t\"vibhag id\": \"22\",\n\t\t\"bookName\": \"Yoga\",\n\t\t\"author\": \"Swami Vivekananda\",\n\t},\n\t{\n\t\tid: \"3\",\n\t\t\"vibhag id\": \"33\",\n\t\t\"bookName\": \"Lorem Ipsum is simply dummy text\",\n\t\t\"author\": \"Lorem Ipsum\",\n\t},\n\t{\n\t\tid: \"4\",\n\t\t\"vibhag id\": \"44\",\n\t\t\"bookName\": \"The Alchemist\",\n\t\t\"author\": \"Paulo Coelho\",\n\t},\n];\n\n\nclass LekhakList extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n          character : 'a',\n          newItem : BookDetails,\n          authorList : BookDetails,\n          tableHeaders: [\"id\", \"vibhag id\", \"bookName\", \"author\"],\n          matching_authors : [],\n          activeTab : '1',\n          lekhakArray : []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    componentDidMount() {\n        \n    }\n\n    getLekhakNames = value => async () => {\n        let val = value;\n        console.log(val);\n        console.log(\"Firebase Query.\");\n        const doc = await db.collection(\"lekhakMapping\").doc(value).get();\n        const lekhakNamesArray = doc.data().names;\n        this.setState(\n            { lekhakArray : lekhakNamesArray }\n        );\n        console.log(lekhakNamesArray);\n    }\n\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n\n    handleChange(e) {\n        let temp = e.target.value;\n        this.setState({\n            character : e.target.value\n        })\n        const tempAuthor = this.state.newItem.filter((item) => {\n            if(item.author.toLowerCase().includes(temp.toLowerCase())){\n                return item\n            }\n            else{\n                return null\n            }\n        })\n        this.setState({\n            authorList: tempAuthor,\n          })\n    }\n\n    \n\n    renderAuthors = () => {\n        return (\n            this.state.lekhakArray.map((data) => (\n                <div className=\"renderAuthors\">\n                    <Card bookName={data} />\n                </div>)))\n    }\n\n    renderAlphabets = () => {\n        return (\n            Alphabets.map((letter) => (\n                <button value={letter.value} onClick={this.getLekhakNames(letter.value)}>{letter.key}</button>\n            )\n            )\n        )\n    }\n    renderAkshars = () => {\n        return (\n            Akshar.map((letter) => (\n                <button value={letter.key} onClick={this.getLekhakNames(letter.key)}>{letter.key}</button>\n            )\n            )\n        )\n    }\n\n    render(){    \n        const {character} = this.state;\n        return (\n            <div>\n                <div>\n                    <div className=\"toggleBtn\">\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '1' })}\n                            onClick={() => { this.toggle('1'); }}>\n                            <button className=\"marBtn\">Marathi</button>\n                        </NavLink>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '2' })}\n                            onClick={() => { this.toggle('2'); }}>\n                            <button className=\"engBtn\">English</button>\n                        </NavLink>\n                    </div>\n                    <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                            {this.state.activeTab == 1 ? \n                            <div className=\"ButtonContainer\">\n                            {this.renderAkshars()}\n                            </div> \n                            : null}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            {this.state.activeTab == 2 ? \n                            <div className=\"ButtonContainer\">\n                                {this.renderAlphabets()}\n                        </div>\n                            : null}\n                        </TabPane>\n                    </TabContent>\n                </div>\n\n                <div >\n                    {this.renderAuthors()}\n                </div>\n                <div id=\"pranavTest\"></div>\n            </div>\n            \n        )\n    }\n\n}\n\nexport default LekhakList;","/home/kundank/Music/sava new/savakhed/src/container/LekhakList/Alphabets.jsx",[],"/home/kundank/Music/sava new/savakhed/src/container/LekhakList/Akshar.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":160,"column":54,"nodeType":"83","messageId":"84","endLine":160,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":163,"column":54,"nodeType":"83","messageId":"84","endLine":163,"endColumn":56},{"ruleId":"73","replacedBy":"85"},{"ruleId":"75","replacedBy":"86"},{"ruleId":"77","severity":1,"message":"87","line":178,"column":16,"nodeType":"79","messageId":"80","endLine":178,"endColumn":25},{"ruleId":"81","severity":1,"message":"88","line":196,"column":51,"nodeType":"83","messageId":"84","endLine":196,"endColumn":53},{"ruleId":"81","severity":1,"message":"88","line":203,"column":51,"nodeType":"83","messageId":"84","endLine":203,"endColumn":53},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["89"],["90"],"'character' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]